;THIS IS PIKOBRAIN ASSEMBLY

;NET STACK
;ES:BX DESCRIPTOR SETUP
;FS:SX TRANSMIT BUFFER WRITER
;GS:TX DATA MEMORY POINTER
;TX SIZE DEFAULT: 500B

.RESET.
;SETUP PERPETUAL SEGMENTS
MN AX 4100,MI AX FS ;TX WRITER
MN AX 5000,MI AX GS ;DATA AREA
">",MN AH 00,I 16
CN AL 0D,JE COMMAND.

MN DX 2037 ;OFFSET 37
MN AL 10 ;8-BIT RESET
K EE ;OUT DX, AL
.LOOP.
;POLL UNTIL NOT 10
K EC ;IN AL, DX
BN AL 10,JN LOOP.
"R"

;CREATE DATA MEMORY
;GET MAC ADDRESS
MN AX 5000,MI AX GS,XR TX TX,MN DX 2000 ;5000 LOCATION OF PROGRAM DATA
K ED,MGTAX,AN TX 0002,AN DL 02
K ED,MGTAX,AN TX 0002,AN DL 02 ;MAC ADDRESS [00]
K ED,MGTAX,AN TX 0002
MN AX FFFF
MGTAX,AN TX 0002
MGTAX,AN TX 0002 ;DEFAULT DEST MAC ADDRESS FF.FF.FF.FF.FF.FF [06]
MGTAX,AN TX 0002 ;ALSO USED AS DEFAULT DEST IP ADDRESS
;RESERVE SPACE FOR IP ADDRESSES
MN AX 0000
.IPFILL.
MGTAX,AN TX 0002,CN TX 0050,JN IPFILL.
;[0C] EMPTY IP 00.00.00.00
;[10] MY IP
;[14] SERVER IP (ROUTER)
;[18] GATEWAY IP
;[1C] SUBNET MASK
;[20] NEXT DEST IP
;[24] LAST SRC PORT / NEXT DEST PORT
;[26] STATUS (TODO LIST)
;[28] SERVER ID (DHCP)
;[2C] DNS SERVER IP
;[30] NEXT DEST MAC
;[36] GATEWAY MAC
;[40] LAST ARP REPLY
;LAPTOP IP
MN AX AB06,MGTAX,AN TX 0002
MN AX 0000,MGTAX,AN TX 0002
MN AX 0800,MGTAX,AN TX 0002

MN AX E882,MGTAX,AN TX 0002
MN AX F9A8,MGTAX,AN TX 0002

MN TX 0026,MN AX 8000,MGTAX ;STATUS: GET_IP

;MAIN START
XR BX BX,MN CL 00
F RXDESC. ;CREATE RECEIVE DESCRIPTORS
F RXDESC. F RXDESC. F RXDESC.
F RXDESC. F RXDESC. F RXDESC.
MN CL 40 ;LAST DECRIPTOR
F RXDESC.
F TXDESC. ;CREATE TRANSMIT DESCRIPTORS
F CONFIG. ;CONFIGURE NETWORK CARD
".",MN AH 00,I 16

;CREATE DHCP DISCOVER
MN AX 4100,MI AX FS,XR SX SX ;WRITE INTO TX BUFFER
F DHCPDIS.
"D"

.TXSEND.
;SEND THE CREATED PACKAGE
MN AX 3500,MI AX ES,MN BX 0003,MN AL F0,MEBAL ;MAKE PACKET SENDABLE
MN DX 2038,MN AL 40,K EE ;SEND NORMAL PACKAGE
""

;WAIT FOR REPLY (POLL)
.RPSTART.
XR DX DX,XR CX CX ;TIMEOUT COUNTER
.RPLOOP.
H CX,JN RPSKIP.
H DL,JN RPSKIP.
"?",MN AH 00,I 16
CN AL 0D,JE COMMAND. ;EXIT ON ENTER, ELSE CONTINUE
JM RPSTART. ;CONTINUE POLLING
.RPSKIP.
MN AX 3000,MI AX ES,MN BX 0003
.REPLYPOLL.
MALEB,BN AL C0 ;HIGHEST BIT=0 : CONTAINS DATA
CN AL 80,JB CALLREAD.
CN AL C0,JE RPLOOP. ;NO DESCRIPTOR HAS RECEIVED
;GO TO NEXT DESCRIPTOR
AN BX 0010,CN BX 0100,JA COMMAND.
JM REPLYPOLL.

.CALLREAD.
UB ;STORED OVER RXREAD.
SN BX 0003,ZL BX 05 ;TRANSLATE INTO LOCATION OF BUFFER
F RXREAD. ;ES:BX CHANGED WHEN READING
PB
;I REMOVED THE ERROR CHECK WARNING!

.CRCON.
;RESTORE READ DESCRIPTOR
MN AX 3000,MI AX ES ;BX=00?3 AFTER POP
MN CL 00,MALEB,BN AL 40,AR CL AL ;40:END OF DESCRIPTOR RING
SN BX 0003
F RXDESC.

;BX SHOULD SURVIVE THIS GAP

;CHECK NEXT TX ACTION
SN BX 0010 ;LAST RX TO BE READ
ZL BX 02 ;PREPARE VALUE
MR CX BX ;STORE FOR REPLY_PING
F TXDESC. ;RESTORE TXDESC
XR SX SX
MN TX 0026
;IF THERE IS A TODO STATUS, HANDLE IT; ELSE GOTO RPSTART.
MAXGT,BN AX 0001,JN DHCP_REQ.
MAXGT,BN AX 0002,JN REPLY_PING.
MAXGT,BN AX 0004,JN REPLY_ARP.
JM RPSTART.

;COMMAND PROMPT
.COMMAND.
F TXDESC. ;RESTORE TXDESC
XR SX SX
":",MN AH 00,I 16
CN AL 20,JE RPSTART.
CN AL 61,JE ARP_REQ.
CN AL 70,JE PING_ECHO.
CN AL 72,JE RESET.
JM END. ;MAKE A SPECIFIC THING LATER

.ARP_REQ.
F ARPREQ."A",JM TXSEND.
.PING_ECHO.
F PINGECHO."P",JM TXSEND.

;SX SHOULD BE 0
.DHCP_REQ. ;CREATE DHCP_REQUEST
F DHCPREQ."Q"
MN TX 0026,MAXGT,XN AX 0001,MGTAX ;CLEAR STATUS 0:DHCP_REQ
JM TXSEND.
.REPLY_PING.
MN AX 4000,AR AX CX ;ALLOWS BX TO BE 0-BASED
MI AX ES,F PINGREPLY.""
MN TX 0026,MAXGT,XN AX 0002,MGTAX ;CLEAR STATUS 1:REPLY_PING
JM TXSEND.
.REPLY_ARP.
F ARPREPLY."@"
MN TX 0026,MAXGT,XN AX 0004,MGTAX ;CLEAR STATUS 2:REPLY_ARP
JM TXSEND.


;CL: 40=END OF DESCRIPTOR RING
;BX: OFFSET OF DESC FROM 3000 (ES:)
.RXDESC.
;RECEIVE DESCRIPTORS SETUP
;!REMEMBER LITTLE ENDIAN SWAPSWOP
MR DX BX ;MULTIPLE OF 0010
ZL DX 05 ;TRANSLATE INTO BUFFER LOCATION
MN AX 3000,MI AX ES ;3000 LOCATION FOR RX DESCRIPTORS
MN AX 0200,MEBAX,AN BX 0002 ;SIZE 512B
CN CL 40,JE RXDLAST.
MN AX 8000 ;ONE AMONG MANY
JM RXDCON.
.RXDLAST.
MN AX C000 ;LAST DESCRIPTOR
.RXDCON.
MEBAX,AN BX 0002 ;WRITE THE VALUE
MN AX 0000,MEBAX,AN BX 0002 ;VLAN
MEBAX,AN BX 0002 ;RESERVED
MEBDX,AN BX 0002 ;CALCULATED ABOVE
MN AX 0004,MEBAX,AN BX 0002 ;BUFF 0004:DX
MN AX 0000,MEBAX,AN BX 0002
MEBAX,AN BX 0002 ;HIGHbuff 0000:0000
R

.TXDESC.
;TRANSMIT DESCRIPTOR SETUP
MN DX 1000 ;PLACE BUFFER HERE
MN AX 3500,MI AX ES,XR BX BX
MN AX 01F4,MEBAX,AN BX 0002 ;DEFAULT SIZE TO SEND: 500B
MN AX 7000,MEBAX,AN BX 0002 ;FIRST, ONLY AND LAST TX DESCRIPTOR (F=OWN)
MN AX 0000,MEBAX,AN BX 0002 ;VLAN
MEBAX,AN BX 0002 ;RESERVED
MEBDX,AN BX 0002 ;DX LOCATION
MN AX 0004,MEBAX,AN BX 0002 ;buff 0004:DX
MN AX 0000,MEBAX,AN BX 0002
MEBAX,AN BX 0002 ;HIGHBUFF 0000:0000
R

.CONFIG.
;CONFIGURE REGISTERS
MN DX 2000
MN DL 50,MN AL C0
K EE ;UNLOCK CONFIG REGS.
MN DL 37,MN AL 04
K EE ;ENABLE TX
MN DL 40 ;TX_REG CONF.
MN AX 3000
K 66,K C1,K E0,K 0C ;SHL EAX, 0C
MN AX 0700 ;0300'0700 ;TRUST ME AND UNLIMITED
K 66,K EF ;OUT..
MN DL DA,MN AX 0400
K EF ;MAX RX PACKET SIZE: 1KB
MN DL EC,MN AL 10
K EE ;MIN TX PACKET SIZE (*32=512) (THRESHOLD)
;MN DL 3C,MN AX C1FF
;K EF ;INTERRUPTS
"C"

;GIVE LOCATION OF DESCS.
MN DL E4,MN AX 0003 ;RX
K 66,K C1,K E0,K 10 ;SHL EAX, 10
XR AX AX,K 66,K EF ;OUT DX, EAX
MN DL E8
K 66,K 31,K C0,K 66,K EF ;XOR EAX > OUT.. FOR 64-BIT TOTAL
MN DL 20,MN AX 0003
K 66,K C1,K E0,K 10 ;SHL EAX, 10
MN AX 5000,K 66,K EF ;OUT DX, EAX
MN DL 24
K 66,K 31,K C0,K 66,K EF ;SAME ABOVE

;START R/T
MN DX 2037,MN AL 0C,K EE ;START RECEIVE AND SEND (DOESNT SEND BEFORE 38)
MN DL 44 ;RX_REG CONF.
K 66,K 31,K C0 ;XOR EAX, EAX
MN AX A71B,K 66,K EF ;OUT DX, EAX
;1:ACCEPT RUNT
;^ LAST NIBBLE: ACCEPT: BROADCAST,MULTICAST,MAC_MATCH,WITH_DEST
;MN DL 50,MN AL 00
;K EE ;LOCK CONF. REGS.
R

;FILLS THE REST OF PROTOCOL WITH 00
.FILLER.
MN AL 00
.FILLOOP.
MFSAL,H SX,CN SX 0200,JB FILLOOP.
R

;PROTOCOL CREATORS
;ALL PASSED VALUES SHOULD BE PREPARED FOR LITTLE ENDIAN

;DHCP DISCOVER
.DHCPDIS.
MN BX 0006 ;DEST MAC
MN DX 0008 ;IPv4
F ETH.
MN DX E601 ;DATA SIZE FOR 500B -14 ETH (01E6)
MN CX 1120 ;UDP / TIME TO LIVE
MN BX 0C06 ;LOCATION OF SRC-DEST IPS (GS)
F IP.
MN DX 4400 ;SRC PORT
MN CX 4300 ;DST PORT
MN BX D201 ;DATA SIZE -20 IP (1E6-14=01D2)
F UDP.
MN DL 01 ;MSG_TYPE:DISCOVER
;CX,BX NOT USED
F DHCP.
F FILLER.
R

;DHCP REQUEST
.DHCPREQ.
MN BX 0006 ;DEST MAC
MN DX 0008 ;IPv4
F ETH.
MN DX E601 ;DATA SIZE FOR 500B -14 ETH (01E6)
MN CX 1120 ;UDP / TIME TO LIVE
MN BX 0C06 ;LOCATION OF SRC-DEST IPS (GS)
F IP.
MN DX 4400 ;SRC PORT
MN CX 4300 ;DST PORT
MN BX D201 ;DATA SIZE -20 IP (1F2-14=01D2)
F UDP.
MN DL 03 ;MSG_TYPE:REQUEST
MN CX 0010 ;REQUESTED IP
MN BX 0028 ;SERVER ID
F DHCP.
F FILLER.
R

.PINGECHO.
MN BX 0050 ;DEST MAC (GATEWAY)
MN DX 0008 ;IPv4
F ETH.
MN DX E601 ;DATA SIZE FOR 500B -14 ETH (01E6)
MN CX 0120 ;ICMP / TIME TO LIVE
MN BX 1056 ;LOCATION OF SRC-DEST IPS (GS)
F IP.
MN DX 0008 ;CODE / TYPE:ECHO=8
F ICMP.
F FILLER.
R

;ES:BX READER
;FS:SI WRITER
.PINGREPLY.
MN BX 0036 ;DEST MAC (GATEWAY)
MN DX 0008 ;IPv4
F ETH.
MR BX SX
;COPY IP
MAXEB,MFSAX,AN BX 0002,AN SX 0002
MCXEB,MFSCX,AN BX 0002,AN SX 0002
QL CX 08,AN CX 000E ;STORE PACKAGE LENGTH IN CX
MAXEB,MFSAX,AN BX 0002,AN SX 0002 ;ID
MAXEB,MFSAX,AN BX 0002,AN SX 0002 ;FRAG.
MAXEB,MFSAX,AN BX 0002,AN SX 0002 ;TIME TO LIVE / PROTOCOL
MN AX 0000,MFSAX,AN BX 0006,AN SX 0002 ;CHECKSUM CLEARED
;SWITCH PLACE OF IPS
MAXEB,MFSAX,AN BX 0002,AN SX 0002 ;SOURCE IP
MAXEB,MFSAX,SN BX 0006,AN SX 0002
MAXEB,MFSAX,AN BX 0002,AN SX 0002 ;DEST IP
MAXEB,MFSAX,AN BX 0006,AN SX 0002
;CALCULATE HEADER CHECKSUM
MR TX SX ;TX STOPPER
SN SX 0014 ;HEADER LENGTH
F CHECKSUM. QL DX 08
SN SX 000A,MFSDX ;ENTER CHECKSUM
AN SX 000A
;COPY ICMP
MN AX 0000
MFSAX,AN BX 0002,AN SX 0002 ;TYPE:REPLY=0 / CODE:0
MFSAX,AN BX 0002,AN SX 0002 ;SKIP CHECKSUM
MAXEB,MFSAX,AN BX 0002,AN SX 0002 ;ID
MAXEB,MFSAX,AN BX 0002,AN SX 0002 ;SEQUENCE NO.
;CALCULATE HEADER CHECKSUM
MR TX SX ;TX STOPPER
SN SX 0008 ;HEADER LENGTH
F CHECKSUM. QL DX 08
SN SX 0006,MFSDX ;ENTER CHECKSUM
AN SX 0006
.PINGRLOOP.
;COPY REST OF MSG
MAXEB,MFSAX,AN BX 0002,AN SX 0002
CR SX CX,JB PINGRLOOP.
;WRITE PACKAGE LENGTH INTO DESCRIPTOR
MN AX 3500,MI AX ES,XR BX BX,MEBCX
R

.ARPREQ.
MN BX 0006 ;BROADCAST MAC
MN DX 0608 ;ARP
F ETH.
MN DX 0100 ;REQUEST
MN CX 0040
MN BX 0018
F ARP.
F FILLER.
R

.ARPREPLY.
MN BX 0006 ;BROADCAST MAC
MN DX 0608 ;ARP
F ETH.
MN DX 0200 ;REPLY
MN CX 0000 ;MY MAC
MN BX 0010 ;MY IP
F ARP.
F FILLER.
R

;DL: MSG TYPE (01:DISCOVER, 03:REQUEST)
;CX: REQUESTED IP
;BX: SERVER ID
.DHCP.
MN AX 0101,MFSAX,AN SX 0002 ;HW.TYPE:ETHERNET=1 / OP:REQUEST=1
MN AX 0006,MFSAX,AN SX 0002 ;HOPS=TIMEtoLIVE:0* / HLEN=MAC_LEN:6
MN AX 2727,MFSAX,AN SX 0002 ;MY ID ANY:27272727
MN AX 2727,MFSAX,AN SX 0002 ;===
MR TX SX,AN TX 0014 ;TX STOPPER FOR 0 FILLER
MN AX 0000
.DHCPFILL.
MFSAX,AN SX 0002,CR SX TX,JN DHCPFILL.
;SECONDS / FLAGS
;CLIENT IP / YOUR IP
;SERVER IP / GATEWAY IP
;...
;MY MAC
XR TX TX
MAXGT,MFSAX,AN SX 0002,AN TX 0002
MAXGT,MFSAX,AN SX 0002,AN TX 0002
MAXGT,MFSAX,AN SX 0002
MR TX SX,AN TX 00CA ;202B PADDING, TX STOPPER
XR AX AX ;FILL-UP
.DHCPFILL2.
MFSAX,AN SX 0002,CR SX TX,JN DHCPFILL2.
;...
;DHCP OPTIONS, ACTUAL REQUEST
MN AX 8263,MFSAX,AN SX 0002 ;MAGIC COOKIE:63825363
MN AX 6353,MFSAX,AN SX 0002 ;===
MN AX 0135,MFSAX,AN SX 0002 ;MSG.TYPE:
MFSDL,H SX ;..GIVEN BY DL (01/03)
CN DL 01,JN DHCP03.
;DL=01: DISCOVER
MN AX 0137,MFSAX,AN SX 0002 ;INFO.REQUEST:
MN AL 01,MFSAL,H SX ;NETMASK
JM DHCPEND.
.DHCP03.
MN AX 0432,MFSAX,AN SX 0002 ;REQUEST IP
MR TX CX
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;WRITE MY REQ IP
MAXGT,MFSAX,AN SX 0002
MN AX 0436,MFSAX,AN SX 0002 ;DHCP SERVER (MARK WHICH OFFER THIS IS)
MR TX BX
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;WRITE SERVER ID
MAXGT,MFSAX,AN SX 0002
;MN AX 0401,MFSAX,AN SX 0002 ;INCLUDE THE SUBNET MASK AGAIN
;MN TX 001C
;MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;WRITE SUBNET MASK
;MAXGT,MFSAX,AN SX 0002
.DHCPEND.
MN AL FF,MFSAL,H SX ;END
R

;ARP
;DX: OPERATION: 0100=REQUEST, 0200=REPLY
;CX: DESTINATION MAC
;BX: DESTINATION IP
.ARP.
MN AX 0100,MFSAX,AN SX 0002 ;HWARE TYPE: ETHERNET
MN AX 0008,MFSAX,AN SX 0002 ;PROTOCOL: IPv4
MN AX 0406,MFSAX,AN SX 0002 ;IP_LEN:4 / MAC_LEN:6
MFSDX,AN SX 0002 ;OPERATION: 1=REQUEST, 2=REPLY
XR TX TX
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;SRC MAC = MY MAC
MAXGT,MFSAX,AN TX 0002,AN SX 0002
MAXGT,MFSAX,AN SX 0002
MN TX 0010
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;SRC IP = MY IP
MAXGT,MFSAX,AN SX 0002
MR TX CX
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;DEST MAC = LAST MAC
MAXGT,MFSAX,AN TX 0002,AN SX 0002
MAXGT,MFSAX,AN SX 0002
MR TX BX
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;DEST IP = LAST IP
MAXGT,MFSAX,AN SX 0002
R

;ICMP
;DX: CODE / TYPE
.ICMP.
MFSDX,AN SX 0002 ;CODE / TYPE
MN AX 0000,MFSAX,AN SX 0002 ;SKIP CHECKSUM
MN AX 2727,MFSAX,AN SX 0002 ;ID
MN AX 0001,MFSAX,AN SX 0002 ;SEQUENCE NO.
;CALCULATE HEADER CHECKSUM
MR TX SX ;TX STOPPER
SN SX 0008 ;HEADER LENGTH
F CHECKSUM. QL DX 08
SN SX 0006,MFSDX ;ENTER CHECKSUM
AN SX 0006
R

;UDP
;DX: SRC PORT
;CX: DST PORT
;BX: DATA SIZE
.UDP.
MFSDX,AN SX 0002 ;SOURCE PORT
MFSCX,AN SX 0002 ;DEST PORT
MFSBX,AN SX 0002 ;DATA SIZE
MN AX 0000,MFSAX,AN SX 0002 ;CHECKSUM:NONE
R

;IP
;DX: DATA SIZE
;CX: PROTOCOL / TIME TO LIVE
;BX: SOURCE IP / DEST IP
.IP.
MN AX 0045,MFSAX,AN SX 0002 ;CONGESTION:0 / VERSION:4 / HEADER_LEN:5
MFSDX,AN SX 0002 ;DATA SIZE
MN AX 2727,MFSAX,AN SX 0002 ;MY ID (ANY)
MN AX 0040,MFSAX,AN SX 0002 ;FRAGMENT:0 / DONT.FRAG:40
MFSCX,AN SX 0002 ;PROTOCOL / TIME TO LIVE
MN AX 0000,MFSAX,AN SX 0002 ;SKIP CHECKSUM YET
MR TX BX,ZR TX 08 ;GET BH
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;SRC IP
MAXGT,MFSAX,AN SX 0002
MR TX BX,BN TX 00FF ;GET BL
MAXGT,MFSAX,AN TX 0002,AN SX 0002 ;DEST IP
MAXGT,MFSAX,AN SX 0002
;CALCULATE HEADER CHECKSUM
MR TX SX ;TX STOPPER
SN SX 0014 ;HEADER LENGTH
F CHECKSUM. QL DX 08
SN SX 000A,MFSDX ;ENTER CHECKSUM
AN SX 000A
R

;ETHERNET
;BX: DEST MAC
;DX: TYPE IPv4:0008, ARP:0608
.ETH.
;DESTINATION MAC
MAXGB,MFSAX,AN BX 0002,AN SX 0002
MAXGB,MFSAX,AN BX 0002,AN SX 0002
MAXGB,MFSAX,AN SX 0002
;SOURCE MAC FROM 5000:0000
XR TX TX
MAXGT,MFSAX,AN TX 0002,AN SX 0002
MAXGT,MFSAX,AN TX 0002,AN SX 0002
MAXGT,MFSAX,AN SX 0002
MFSDX,AN SX 0002 ;TYPE
R

;CALCULATE CHECKSUM
;SX START (FS:), TX STOPPER
.CHECKSUM.
MO AX FS,MI AX ES ;ES=FS, WILL USE ES:SI, DUE TO RXREAD
XR DX DX ;COUNTER
.CSLOOP.
MAXES,QL AX 08 ;BECAUSE LITTLE ENDIAN
AR DX AX,JB CSCARRY. ;CARRY = JB
.CSCON.
AN SX 0002,CR SX TX
JE CSEND. JM CSLOOP.
.CSCARRY.
H DX,JM CSCON.
.CSEND.
N DX ;END WITH NOT
R

;BX: CORRECT OFFSET FROM 4000:
;READ BUFFER
;CH MARKS ERROR CODE
.RXREAD.
MN AX 4000,MI AX ES ;BX ALREADY GIVEN
;READ ETHERNET
AN BX 0006 ;SKIP MY* MAC
MN TX 0030
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE SRC MAC AS NEXT MAC
MAXEB,MGTAX,AN BX 0002,AN TX 0002
MAXEB,MGTAX,AN BX 0002
MAXEB,CN AX 0008,JE R00.
MAXEB,CN AX 0608,JE RARP. ;ARP
MN CH 00,MR AL AH,F ERROR.R ;NOT IPv4/ARP (IPv6:DD)
.R00.
AN BX 0002
;READ IP
MALEB,CN AL 45,JE R10. ;IPv4 / HEADLEN:5
MN CH 10,F ERROR.R
.R10.
AN BX 0007 ;SKIP CONGESTION/LENGTH/ID
MALEB,CN AL 00,JE R11. ;FRAGMENT:00
MN CH 11,F ERROR.R
.R11.
AN BX 0002,MCLEB ;STORE PROTOCOL
AN BX 0003 ;SKIP CHECKSUM YET
MN TX 0020
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE SRC IP AS NEXT IP
MAXEB,MGTAX,AN BX 0002
AN BX 0004 ;SKIP MY* IP
MR TX BX,MR SX BX,SN SX 0014,XR DX DX ;PREPARE CHECKSUM
F CSLOOP. ;DIFFERENT ENTRY POINT INTO CHECKSUM
CN DX 0000,JE R1F. ;FFFF BEFORE NOT OPERATION
MN CH 1F,F ERROR.R ;WRONG CHECKSUM
.R1F.
;CHECK PROTOCOL GIVEN BY IP
CN CL 01,JE RICMP.
CN CL 11,JE RUDP.
MN CH 1A,MR AH CL,F ERROR.R ;DIFFERENT PROTOCOL (TCP:6, IPv6:29)
.RTLCON. ;TRANSPORT LAYER CON
;FIGURE OUT PROTOCOL
MAXEB
CN AX 0102,JE RDHCP.
MN CH F0,F ERROR.R
.READCON.
MN CH FF ;GOOD RETURN VALUE
R

;READ ARP
.RARP.
AN BX 0006 ;GOTO IT, THEN SKIP HTYPE/PROTOCOL
MAXEB,CN AX 0406,JE R50. ;IP_LEN / MAC_LEN
MN CH 50,F ERROR.R
.R50.
AN BX 0002
MAXEB,CN AH 01,JN READCON.
;REQUEST
AN BX 0002,MN TX 0030
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;SAVE SRC MAC FOR REPLY
MAXEB,MGTAX,AN BX 0002,AN TX 0002
MAXEB,MGTAX,AN BX 0002
MN TX 0020
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;SAVE SRC IP FOR REPLY
MAXEB,MGTAX,AN BX 0002
;COMPARE DEST MAC WITH MY MAC AND 00::
XR TX TX ;MY MAC (GS:)
MAXEB,CN AX 0000,JN RARPMAC. ;EMPTY MAC CHECK
MN TX 000A ;AFTER INCREASE IT BECOMES 0C: EMPTY IP
JM RAMACCON.
.RARPMAC.
MCXGT,CR AX CX,JN READCON. ;UNKNOWN MAC
.RAMACCON.
;CONTINUE MAC COMPARE, WITH TX=00 OR TX=0A
AN BX 0002,AN TX 0002
MAXEB,MCXGT,CR AX CX,JN READCON. ;UNKNOWN
AN BX 0002,AN TX 0002
MAXEB,MCXGT,CR AX CX,JN READCON. ;UNKNOWN
CN TX 0004,JE RARPEND. ;IF DEST MAC == MY MAC : REPLY
;ELSE: CHECK IF DEST IP == MY IP
AN BX 0002,MN TX 0010
MAXEB,MCXGT,CR AX CX,JN READCON. ;UNKNOWN IP, QUIT
AN BX 0002,AN TX 0002
MAXEB,MCXGT,XR AX CX,JN READCON. ;UNKNOWN
.RARPEND.
;STORE STATUS 2:REPLY_ARP
MN TX 0026,MAXGT,ON AX 0004,MGTAX
JM READCON.

;READ ICMP
.RICMP.
MALEB
CN AL 00,JE RICMP0.
CN AL 08,JE RICMP8.
MN CH 4A,F ERROR.R ;UNKNOWN MSG TYPE
.RICMP0.
;PING REPLY
WE,"p",MN TX 0020
MCHGT,WX,H TX,MCHGT,WX,H TX ;PRINT SRC IP
MCHGT,WX,H TX,MCHGT,WX,JM READCON.
.RICMP8.
MN TX 0026,MAXGT,ON AX 0002,MGTAX ;STORE TASK 1:REPLY_PING
JM READCON.

;READ UDP
.RUDP.
MN TX 0024
MAXEB,MGTAX,AN BX 0004 ;STORE SOURCE PORT
AN BX 0004 ;SKIP LENGTH AND CHECKSUM
JM RTLCON.

;JMP
;READ DHCP
.RDHCP.
AN BX 0010 ;SKIP OP/HTYPE/HLEN/HOPS/ID/SECS+FLAGS/CIADDR
MN TX 0010
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE OFFERED IP
MAXEB,MGTAX,AN BX 0002
MN TX 0014
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE ROUTER IP
MAXEB,MGTAX,AN BX 0002
MN TX 0018
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE GATEWAY IP
MAXEB,MGTAX,AN BX 0002
AN BX 00D0 ;SKIP MAC/0FILL
MAXEB,CN AX 8263,JE R30. ;MAGIC COOKIE
MN CH 30,F ERROR.R
.R30.
AN BX 0004 ;SKIP REST OF COOKIE
AN BX 0002 ;GO TO MSG TYPE
MALEB
CN AL 02,JE RDHCP02.
CN AL 05,JE RDHCP05.
MN CH 3A,F ERROR.R ;UNKNOWN MSG TYPE
.RDHCP05.
MN TX 0026,MAXGT,BN AX 8000,JE READCON. ;DON'T ACCEPT MORE THAN ONE ACK.
"q"
MAXGT,XN AX 8000,MGTAX ;CLEAR STATUS F:GET_IP
UB,MN TX 0036,MN BX 0006
MAXEB,MGTAX,AN BX 0002,AN TX 0002
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;SAVE GATEWAY MAC
MAXEB,MGTAX,PB
JM RDHCPCON.
.RDHCP02.
MN TX 0026,MAXGT,BN AX 0001,JN READCON. ;DON'T ACCEPT MORE THAN ONE OFFER
"d"
MN TX 0026,MAXGT,ON AX 0001,MGTAX ;STORE STATUS 0:DHCP_REQ
.RDHCPCON.
H BX
.RDHCPOPT.
MAXEB
CN AL FF,JE READCON. ;END
CN AL 00,JE RDHCPCON. ;PADDING
CN AL 01,JE RDHCPMASK.
CN AL 06,JE RDHCPDNS.
CN AL 33,JE RDHCPTIME.
CN AL 36,JE RDHCPSID.
CN BX 01FF,JA READCON.
AN BX 0002,ZR AX 08,AR BX AX,JM RDHCPOPT. ;SKIP UNKNOWN OPTION
.RDHCPMASK.
AN BX 0002,MN TX 001C
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE SUBNET MASK
MAXEB,MGTAX,AN BX 0002,JM RDHCPOPT.
.RDHCPDNS.
ZR AX 08,MR DX AX ;LENGTH OF OPTION
AN BX 0002,MN TX 002C
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE DNS SERVER IP
MAXEB,MGTAX,AN BX 0002,JM RDHCPOPT.
.RDHCPTIME.
AN BX 0002,WE,"T"
MDXEB,QR DX 08,AN BX 0002 ;STORE TIME IN DX-AX
MAXEB,QR AX 08,AN BX 0002
MN CX 003C,D CX ;DIVIDE SECONDS BY 60S TO GET MINUTES
UA,MR CH AH,WX,PA,MR CH AL,WX ;OUTPUT THE TIME
JM RDHCPOPT.
.RDHCPSID.
AN BX 0002,MN TX 0028
MAXEB,MGTAX,AN BX 0002,AN TX 0002 ;STORE SERVER ID
MAXEB,MGTAX,AN BX 0002,JM RDHCPOPT.

.ERROR.
;WRITES AL:WRONG_VALUE, CH:ERROR_CODE
UC,MR CH AL,WX,PC,WX,"E"
R

.END.
E
